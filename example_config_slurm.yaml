simulation:
  base_case: "test_cases/cylinder_2D_Re100"
  startTime: 0
  duration: 6
  writeInterval: 0.5
  deltaT: 1.0e-3
  gamg:
    smoother: "DICGaussSeidel"
    tolerance: 1e-06
    relTol: 0.01
    cacheAgglomeration: "yes"
    nCellsInCoarsestLevel: 10
    processorAgglomerator: "none"
    nPreSweeps: 0
    preSweepsLevelMultiplier: 1
    maxPreSweeps: 10
    nPostSweeps: 2
    postSweepsLevelMultiplier: 1
    maxPostSweeps: 10
    nFinestSweeps: 2
    interpolateCorrection: "no"
    scaleCorrection: "yes"
    directSolveCoarsest: "no"
    solverCoarsest: "PCG"
    preconditionerCoarsest: "DIC"
    toleranceCoarsest: 1e-06
    relTolCoarsest: 0.01

experiment:
  name: "cylinder2D-2"
  exp_path: "run/cylinder2D-2"
  launcher: "slurm"

batch_settings:
  batch_args:
    nodes: 1
    time: "00:30:00"
    ntasks: 2
    partition: "barnard"
  preamble: ["module load release/24.04 GCC/12.3.0 OpenMPI/4.1.5 OpenFOAM/v2406 Python/3.11.3", "source $FOAM_BASH", "source /path/to/bopt/bin/activate"]

optimization:
  startTime: [ 1.0, 3.0, 5.0]
  duration: 0.05
  writeInterval: 1
  deltaT: 1.0e-3
  sobol_trials: 10
  bo_trials: 70
  batch_size: 1
  n_repeat_trials: 10
  repeated_trials_parallel: True
  bad_value: 10
  seed: 0
  device: "cpu"
  stopping:
    min_trials: 30
    window_size: 10 
    improvement_bar: 0.01
  gamg:
    smoother:
      name: "smoother"
      type: "choice"
      value_type: "str"
      is_ordered: False
      sort_values: False
      values: ["FDIC", "DIC", "DICGaussSeidel", "symGaussSeidel", "nonBlockingGaussSeidel", "GaussSeidel"]
    interpolateCorrection:
      name: "interpolateCorrection"
      type: "choice"
      value_type: "str"
      is_ordered: False
      sort_values: False
      values: ["yes", "no"]
    nPreSweeps:
      name: "nPreSweeps"
      type: "range"
      value_type: "int"
      bounds: [0, 10]
    nPostSweeps:
      name: "nPostSweeps"
      type: "range"
      value_type: "int"
      bounds: [0, 10]
    nFinestSweeps:
      name: "nFinestSweeps"
      type: "range"
      value_type: "int"
      bounds: [1, 10]
    nCellsInCoarsestLevel:
      name: "nCellsInCoarsestLevel"
      type: "range"
      value_type: "int"
      bounds: [2, 1000]
    toleranceCoarsest:
      name: "toleranceCoarsest"
      type: "range"
      value_type: "float"
      bounds: [-8, -2] # log10 space
    relTolCoarsest:
      name: "relTolCoarsest"
      type: "range"
      value_type: "float"
      bounds: [-5, -2] # log10 space
evaluation:
  output_path: "output"
  data_path: "run/cylinder2D-2"
  plots:
    trialVsBase:
      isReq: True
    bestParams: 
      isReq: True
      plotScope:
        type: "all" # "selected or all"
        selectedParams: ["smoother", "nPostSweeps"] # required if type == "selected"
    trialVsObj:
      isReq: True
    gaussianProcess:
      isReq: True
      plotScope:
        type: "all" #  "selected or all"
        selectedParams: ["smoother", "nPostSweeps"] # required if type == "selected"
      param_setting:
        type: "optimal" #  "optimal or fixed"
        fixed_values: # required if type == "fixed"
          smoother: "FDIC"
          interpolateCorrection: "yes"
          nPreSweeps: 2
          nPostSweeps: 4
          nFinestSweeps: 1
          nCellsInCoarsestLevel: 10
          toleranceCoarsest: -6
          relTolCoarsest: -2
    featureImportance:
        isReq: True
    crossValidation:
        isReq: True  
  plot_attributes:
    style_sheet: "classic" # "dark_background, classic or any other from matplotlib"
